
@model ProyectoPlataformaWebCIDEP.Models.EstudiantesModel

@{
    Layout = "~/Views/Shared/_Authenticated.cshtml";
    ViewBag.VistaActiva = "Administracion";
    var apiUrl = System.Configuration.ConfigurationManager.AppSettings["urlApi"].ToString();

}


<div class="container">

    <div class="row" style="margin-bottom: 1rem;">
        <div class="col-md-6 col-sm-6">
            <div class="dropdown">
                <button class="btn btn-primary btn-lg  dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Estudiantes
                </button>

                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="dropdown-item" href="@Url.Action("RegistrarEstudiante", "Estudiantes")">Agregar Estudiante</a>
                    <a class="dropdown-item import-link" href="#">Importar Estudiantes</a>
                    <a class="dropdown-item" href="@Url.Action("VerEstudiantesGrados", "EstudiantesGrados")">Ver Estudiantes con sus Grados</a>
                    <a class="dropdown-item" href="@Url.Action("VerEstudiantesUsuarios", "Estudiantes")">Ver Estudiantes con su Usuario</a>
                </div>
            </div>
        </div>
        <div class="row justify-content-center">
            <!-- Alerta de éxito -->
            @if (!string.IsNullOrEmpty(ViewBag.respuesta))
            {
                <div class="col-md-8 offset-md-2">
                    <div id="alerta" class="alert alert-info alert-dismissible fade show text-center" role="alert">
                        @Html.Raw(ViewBag.respuesta)
                    </div>
                </div>
            }

            <script>
                $(document).ready(function () {
                    setTimeout(function () {
                        $("#alerta").alert('close');
                    }, 5000);
                });
            </script>
        </div>

        <div class="col-md-6 col-sm-6" style="display:none;" id="formImportar">
            <form id="uploadForm" enctype="multipart/form-data">
                <input type="file" name="file" accept=".csv">
                <button type="submit" class="btn btn-outline-primary mt-1">Importar</button>
            </form>
        </div>
    </div>


    <div class="row">
        <div class="col-md-12 col-sm-12">

            @if (Model.Estudiantes.Count() > 0)
            {

                <table class="table table-bordered table-striped" id="table-demo">
                    <thead>
                        <tr>
                            <th>Cédula</th>
                            <th>Nombre</th>
                            <th>Primer Apellido</th>
                            <th>Segundo Apellido</th>
                            <th>Fecha de Nacimiento</th>
                            <th>Usuario Asociado</th>
                            @if (Convert.ToInt32(Session["ID_Rol"]) == 1)
                            {
                                <th></th>
                            }
                        </tr>
                    </thead>
                    <tbody id="myTable">
                        @foreach (var estudiante in Model.Estudiantes)
                        {
                            <tr>
                                <td>@estudiante.Cedula</td>
                                <td>@estudiante.Nombre</td>
                                <td>@estudiante.PrimerApellido</td>
                                <td>@estudiante.SegundoApellido</td>
                                <td>@estudiante.FechaNacimiento.ToString("dd - MMMM - yyyy", new System.Globalization.CultureInfo("es-MX"))</td>
                                @if (estudiante.ID_Usuario.HasValue)
                                {
                                    <td>
                                        Sí
                                    </td>
                                }
                                else
                                {
                                    <td>
                                        No
                                    </td>
                                }
                                @if (Convert.ToInt32(Session["ID_Rol"]) == 1)
                                {
                                    <td>
                                        <a href="@Url.Action("EditarEstudiante", "Estudiantes", new { ID_Estudiante = estudiante.ID_Estudiante })">Editar</a>
                                        @if (estudiante.Activo == true)
                                        {
                                            using (Html.BeginForm("DesactivarEstudiante", "Estudiantes", FormMethod.Post))
                                            {
                                                @Html.Hidden("ID_Estudiante", estudiante.ID_Estudiante)
                                                <button type="submit" class="btn-link" style="border: none; background: none; padding: 0; color: red;">Desactivar</button>
                                            }
                                        }

                                    </td>
                                }

                            </tr>
                        }

                    </tbody>
                </table>
            }
            else
            {
                <h3>No hay registros</h3>
            }
        </div>
    </div>
</div>

<style>
    .dataTables_filter input {
        width: 30vw;
    }
</style>
<script>
    $(document).ready(function () {

        var table = new DataTable('#table-demo', {
            "paging": true,
            "language": {
                "lengthMenu": "Mostrar _MENU_ registros por página",
                "zeroRecords": "No se encontraron registros",
                "info": "Mostrando página _PAGE_ de _PAGES_",
                "infoEmpty": "No hay registros disponibles",
                "infoFiltered": "(filtrados de _MAX_ registros totales)",
                "search": "Buscar:",
                "searchPlaceholder": "Ingrese su búsqueda aquí",
                "paginate": {
                    "first": "Primero",
                    "last": "Último",
                    "next": "Siguiente",
                    "previous": "Anterior"
                }
            }
        });


    });
</script>


<script>
    var urlApi = '@apiUrl';

    document.querySelector('.import-link').addEventListener('click', function (event) {
        event.preventDefault();

        var formulario = document.getElementById('formImportar');

        if (formulario.style.display == 'block') {
            formulario.style.display = 'none';
        }
        else {
            document.getElementById('formImportar').style.display = 'block';
        }
    });


    document.getElementById('uploadForm').addEventListener('submit', async function (event) {
        event.preventDefault();

        var formData = new FormData(this);

        try {
            var response = await fetch(`${urlApi}ImportarEstudiantes`, {
                method: 'POST',
                body: formData,
                mode: 'cors'
            });
            var data = await response.json();
            alert(data); // Muestra la respuesta del servidor
            window.location.reload();
        } catch (error) {
            console.error('Error al enviar el archivo:', error);
            alert('Error al enviar el archivo. Por favor, inténtalo de nuevo.');
        }
    });

</script>

